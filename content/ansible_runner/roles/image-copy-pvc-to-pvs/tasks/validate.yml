- name: set sessions directory
  set_fact:
    sessions_dir: '/home/sessions'
    powervc_rc:   '/opt/ibm/powervc/powervcrc'

- name: Perform Node Validation
  block:
    - name: 'Check if the session directory exists'
      stat:
        path: "{{sessions_dir}}"
      register: p

    - fail: msg='Session directory cannot be found'
      when: not(p.stat.isdir is defined and p.stat.isdir)

    # TODO: do we check for some minimal seession directory size?

    - block:
        - name: test if file copy works properly
          copy: src=files/sample.txt dest="{{sessions_dir}}/{{session_id}}" mode=700
      rescue:
        - fail:
            msg: >-
              Unable to copy files to PowerVC node. Check if the target directory exists and is writable
              and if "SElinux" is enabled on then install "libselinux-python" on the PowerVC node.
      always:
        - file: state=absent path="{{sessions_dir}}/{{session_id}}"

    - name: 'Check if the PowerVC RC file is in place'
      stat:
        path: "{{powervc_rc}}"
      register: p

    - fail: msg='PowerVC RC file cannot be found'
      when: not(p.stat.exists and p.stat.isreg)

    - name: 'Check if the "powervc-image" is present'
      shell: which powervc-image
      register: p
      ignore_errors: true

    - fail: msg='Application missing "powervc-image"'
      when: not(p.rc is defined and p.rc == 0)

    - name: 'Try listing images with "powervc-image"'
      shell: source {{powervc_rc}} && powervc-image list
      register: p
      ignore_errors: true

    - fail: msg='Unable to properly run "powervc-image", check the RC file'
      when: not(p.rc is defined and p.rc == 0)

    - name: 'Check if the virtual environment exists'
      stat:
        path: "{{sessions_dir}}/venv"
      register: p

    - fail: msg='Virtual environenmet cannot be found'
      when: not(p.stat.isdir is defined and p.stat.isdir)

    - name: 'Try to activate the virtual-environment'
      shell: source "{{sessions_dir}}/venv/bin/activate"
      register: p
      ignore_errors: true

    - fail: msg='Unable to activate virtual environment, make sure it is set-up properly'
      when: not(p.rc is defined and p.rc == 0)

    # TODO: check if python version is suitable

    # TODO: check if required python packages are present